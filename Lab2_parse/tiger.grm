%{
#include <stdio.h>
#include "util.h"
#include "errormsg.h"

int yylex(void); /* function prototype */

void yyerror(char *s)
{
 EM_error(EM_tokPos, "%s", s);
}
%}


%union {
	int pos;
	int ival;
	string sval;
	}

%token <sval> ID STRING
%token <ival> INT

%token 
  COMMA COLON SEMICOLON LPAREN RPAREN LBRACK RBRACK 
  LBRACE RBRACE DOT 
  PLUS MINUS TIMES DIVIDE EQ NEQ LT LE GT GE
  AND OR ASSIGN
  ARRAY IF THEN ELSE WHILE FOR TO DO LET IN END OF  
  BREAK NIL
  FUNCTION VAR TYPE 
  UMINUS
%start program

%left OR
%left AND
%nonassoc EQ NEQ LT GT GE LE
%left PLUS MINUS
%left TIMES DIVIDE 
%left UMINUS

%right ELSE THEN

%%

program:   exp
	   ;

 
exp:    exp PLUS exp
   |    exp MINUS exp
   |    exp TIMES exp
   |    exp DIVIDE exp
   |    exp EQ exp
   |    exp NEQ exp
   |    exp LT exp
   |    exp LE exp
   |    exp GT exp
   |    exp GE exp
   |    exp AND exp
   |    exp OR exp 
   |    MINUS exp   %prec UMINUS
   
   |    lvalue ASSIGN exp 
   |    LPAREN expseq RPAREN
   |    LET decs IN expseq END  
   |    ID LBRACK exp RBRACK OF exp    
   |    ID LBRACE vfields RBRACE  
   |    ID LPAREN fvfields RPAREN  
   |    lvalue 

   |    IF exp THEN exp
   |    IF exp THEN exp ELSE exp
   |    WHILE exp DO exp     
   |    FOR ID ASSIGN exp TO exp DO exp  

   |    BREAK  
   |    INT
   |    STRING 
   |    NIL
   ;
vfields:  ID EQ exp vfield_ex 
       |
       ;

vfield_ex: COMMA ID EQ exp vfield_ex

         |            
         ;
fvfields: exp fvfield_ex
        |  
        ;
fvfield_ex: COMMA exp fvfield_ex
          |  
          ;


lvalue : ID 
       | lvalue DOT ID
       | lvalue LBRACK exp RBRACK 
       | ID LBRACK exp RBRACK
       ;

expseq : exp
       | exp SEMICOLON expseq 
       |
       ;

decs:  dec
    |  dec decs
    ;

dec : vardec 
    | fundec 
    | tydec 
    ;

vardec: VAR ID COLON ID ASSIGN exp 
      |  VAR ID ASSIGN exp

fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp 
      | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
      ;

tydec : TYPE ID EQ ty 
      ;

ty    : ID
      | LBRACE tyfields RBRACE 
      | ARRAY OF ID 
      ;


tyfields :    
         | ID COLON ID tyfield_ex 
         ;

tyfield_ex : COMMA ID COLON ID tyfield_ex 
           |    
           ;
 
















	
