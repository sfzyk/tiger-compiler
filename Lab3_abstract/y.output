State 1 conflicts: 1 shift/reduce
State 32 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 84 conflicts: 12 shift/reduce
State 95 conflicts: 12 shift/reduce
State 120 conflicts: 12 shift/reduce
State 139 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: exp PLUS exp
    3    | exp MINUS exp
    4    | exp TIMES exp
    5    | exp DIVIDE exp
    6    | exp EQ exp
    7    | exp NEQ exp
    8    | exp LT exp
    9    | exp LE exp
   10    | exp GT exp
   11    | exp GE exp
   12    | exp AND exp
   13    | exp OR exp
   14    | MINUS exp
   15    | lvalue ASSIGN exp
   16    | LPAREN expseq RPAREN
   17    | LET decs IN expseq END
   18    | ID LBRACK exp RBRACK OF exp
   19    | ID LBRACE vfields RBRACE
   20    | ID LPAREN fvfields RPAREN
   21    | lvalue
   22    | IF exp THEN exp
   23    | IF exp THEN exp ELSE exp
   24    | WHILE exp DO exp
   25    | FOR ID ASSIGN exp TO exp DO exp
   26    | BREAK
   27    | INT
   28    | STRING
   29    | NIL

   30 vfields: vfield vfields_
   31        | vfield
   32        | %empty

   33 vfields_: COMMA vfield vfields_
   34         | COMMA vfield

   35 vfield: ID EQ exp

   36 fvfields: exp fvfields_
   37         | exp
   38         | %empty

   39 fvfields_: COMMA exp fvfields_
   40          | COMMA exp

   41 lvalue: ID
   42       | lvalue DOT ID
   43       | lvalue LBRACK exp RBRACK
   44       | ID LBRACK exp RBRACK

   45 expseq: exp
   46       | exp SEMICOLON expseq
   47       | %empty

   48 decs: dec
   49     | dec decs

   50 dec: vardec
   51    | fundec
   52    | tydec

   53 vardec: VAR ID COLON ID ASSIGN exp
   54       | VAR ID ASSIGN exp

   55 fundec: fundecList

   56 fundecList: afundec fundecList
   57           | afundec

   58 afundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   59        | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   60 tydec: nametylist

   61 nametylist: namety nametylist
   62           | namety

   63 namety: TYPE ID EQ ty

   64 ty: ID
   65   | LBRACE tyfields RBRACE
   66   | ARRAY OF ID

   67 tyfields: tyfield
   68         | tyfield COMMA tyfields_
   69         | %empty

   70 tyfields_: tyfield
   71          | tyfield COMMA tyfields_

   72 tyfield: ID COLON ID


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 18 19 20 25 35 41 42 44 53 54 58 59 63 64 66 72
STRING (259) 28
INT (260) 27
COMMA (261) 33 34 39 40 68 71
COLON (262) 53 59 72
SEMICOLON (263) 46
LPAREN (264) 16 20 58 59
RPAREN (265) 16 20 58 59
LBRACK (266) 18 43 44
RBRACK (267) 18 43 44
LBRACE (268) 19 65
RBRACE (269) 19 65
DOT (270) 42
PLUS (271) 2
MINUS (272) 3 14
TIMES (273) 4
DIVIDE (274) 5
EQ (275) 6 35 58 59 63
NEQ (276) 7
LT (277) 8
LE (278) 9
GT (279) 10
GE (280) 11
AND (281) 12
OR (282) 13
ASSIGN (283) 15 25 53 54
ARRAY (284) 66
IF (285) 22 23
THEN (286) 22 23
ELSE (287) 23
WHILE (288) 24
FOR (289) 25
TO (290) 25
DO (291) 24 25
LET (292) 17
IN (293) 17
END (294) 17
OF (295) 18 66
BREAK (296) 26
NIL (297) 29
FUNCTION (298) 58 59
VAR (299) 53 54
TYPE (300) 63
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
    15 18 22 23 24 25 35 36 37 39 40 43 44 45 46 53 54 58 59
vfields (50)
    on left: 30 31 32, on right: 19
vfields_ (51)
    on left: 33 34, on right: 30 33
vfield (52)
    on left: 35, on right: 30 31 33 34
fvfields (53)
    on left: 36 37 38, on right: 20
fvfields_ (54)
    on left: 39 40, on right: 36 39
lvalue (55)
    on left: 41 42 43 44, on right: 15 21 42 43
expseq (56)
    on left: 45 46 47, on right: 16 17 46
decs (57)
    on left: 48 49, on right: 17 49
dec (58)
    on left: 50 51 52, on right: 48 49
vardec (59)
    on left: 53 54, on right: 50
fundec (60)
    on left: 55, on right: 51
fundecList (61)
    on left: 56 57, on right: 55 56
afundec (62)
    on left: 58 59, on right: 56 57
tydec (63)
    on left: 60, on right: 52
nametylist (64)
    on left: 61 62, on right: 60 61
namety (65)
    on left: 63, on right: 61 62
ty (66)
    on left: 64 65 66, on right: 63
tyfields (67)
    on left: 67 68 69, on right: 58 59 65
tyfields_ (68)
    on left: 70 71, on right: 68 71
tyfield (69)
    on left: 72, on right: 67 68 70 71


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


State 1

   18 exp: ID . LBRACK exp RBRACK OF exp
   19    | ID . LBRACE vfields RBRACE
   20    | ID . LPAREN fvfields RPAREN
   41 lvalue: ID .
   44       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 41 (lvalue)]
    $default  reduce using rule 41 (lvalue)


State 2

   28 exp: STRING .

    $default  reduce using rule 28 (exp)


State 3

   27 exp: INT .

    $default  reduce using rule 27 (exp)


State 4

   16 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 47 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 19


State 5

   14 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14


State 6

   22 exp: IF . exp THEN exp
   23    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


State 7

   24 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


State 8

   25 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


State 9

   17 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    decs        go to state 27
    dec         go to state 28
    vardec      go to state 29
    fundec      go to state 30
    fundecList  go to state 31
    afundec     go to state 32
    tydec       go to state 33
    nametylist  go to state 34
    namety      go to state 35


State 10

   26 exp: BREAK .

    $default  reduce using rule 26 (exp)


State 11

   29 exp: NIL .

    $default  reduce using rule 29 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 36


State 13

    1 program: exp .
    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 1 (program)


State 14

   15 exp: lvalue . ASSIGN exp
   21    | lvalue .
   42 lvalue: lvalue . DOT ID
   43       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 49
    DOT     shift, and go to state 50
    ASSIGN  shift, and go to state 51

    $default  reduce using rule 21 (exp)


State 15

   20 exp: ID LPAREN . fvfields RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 38 (fvfields)

    exp       go to state 52
    fvfields  go to state 53
    lvalue    go to state 14


State 16

   18 exp: ID LBRACK . exp RBRACK OF exp
   44 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 54
    lvalue  go to state 14


State 17

   19 exp: ID LBRACE . vfields RBRACE

    ID  shift, and go to state 55

    $default  reduce using rule 32 (vfields)

    vfields  go to state 56
    vfield   go to state 57


State 18

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   45 expseq: exp .
   46       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 58
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48

    $default  reduce using rule 45 (expseq)


State 19

   16 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 59


State 20

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   14    | MINUS exp .

    $default  reduce using rule 14 (exp)


State 21

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   22    | IF exp . THEN exp
   23    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    THEN    shift, and go to state 60


State 22

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   24    | WHILE exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 61


State 23

   25 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 62


State 24

   58 afundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   59        | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 63


State 25

   53 vardec: VAR . ID COLON ID ASSIGN exp
   54       | VAR . ID ASSIGN exp

    ID  shift, and go to state 64


State 26

   63 namety: TYPE . ID EQ ty

    ID  shift, and go to state 65


State 27

   17 exp: LET decs . IN expseq END

    IN  shift, and go to state 66


State 28

   48 decs: dec .
   49     | dec . decs

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 48 (decs)

    decs        go to state 67
    dec         go to state 28
    vardec      go to state 29
    fundec      go to state 30
    fundecList  go to state 31
    afundec     go to state 32
    tydec       go to state 33
    nametylist  go to state 34
    namety      go to state 35


State 29

   50 dec: vardec .

    $default  reduce using rule 50 (dec)


State 30

   51 dec: fundec .

    $default  reduce using rule 51 (dec)


State 31

   55 fundec: fundecList .

    $default  reduce using rule 55 (fundec)


State 32

   56 fundecList: afundec . fundecList
   57           | afundec .

    FUNCTION  shift, and go to state 24

    FUNCTION  [reduce using rule 57 (fundecList)]
    $default  reduce using rule 57 (fundecList)

    fundecList  go to state 68
    afundec     go to state 32


State 33

   52 dec: tydec .

    $default  reduce using rule 52 (dec)


State 34

   60 tydec: nametylist .

    $default  reduce using rule 60 (tydec)


State 35

   61 nametylist: namety . nametylist
   62           | namety .

    TYPE  shift, and go to state 26

    TYPE      [reduce using rule 62 (nametylist)]
    $default  reduce using rule 62 (nametylist)

    nametylist  go to state 69
    namety      go to state 35


State 36

    0 $accept: program $end .

    $default  accept


State 37

    2 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14


State 38

    3 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14


State 39

    4 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14


State 40

    5 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


State 41

    6 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


State 42

    7 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


State 43

    8 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


State 44

    9 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


State 45

   10 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14


State 46

   11 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14


State 47

   12 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14


State 48

   13 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    lvalue  go to state 14


State 49

   43 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 82
    lvalue  go to state 14


State 50

   42 lvalue: lvalue DOT . ID

    ID  shift, and go to state 83


State 51

   15 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    lvalue  go to state 14


State 52

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   36 fvfields: exp . fvfields_
   37         | exp .

    COMMA   shift, and go to state 85
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 37 (fvfields)

    fvfields_  go to state 86


State 53

   20 exp: ID LPAREN fvfields . RPAREN

    RPAREN  shift, and go to state 87


State 54

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   18    | ID LBRACK exp . RBRACK OF exp
   44 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 88
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


State 55

   35 vfield: ID . EQ exp

    EQ  shift, and go to state 89


State 56

   19 exp: ID LBRACE vfields . RBRACE

    RBRACE  shift, and go to state 90


State 57

   30 vfields: vfield . vfields_
   31        | vfield .

    COMMA  shift, and go to state 91

    $default  reduce using rule 31 (vfields)

    vfields_  go to state 92


State 58

   46 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 47 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 93


State 59

   16 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 16 (exp)


State 60

   22 exp: IF exp THEN . exp
   23    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 94
    lvalue  go to state 14


State 61

   24 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 95
    lvalue  go to state 14


State 62

   25 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 96
    lvalue  go to state 14


State 63

   58 afundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   59        | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 97


State 64

   53 vardec: VAR ID . COLON ID ASSIGN exp
   54       | VAR ID . ASSIGN exp

    COLON   shift, and go to state 98
    ASSIGN  shift, and go to state 99


State 65

   63 namety: TYPE ID . EQ ty

    EQ  shift, and go to state 100


State 66

   17 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 47 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 101


State 67

   49 decs: dec decs .

    $default  reduce using rule 49 (decs)


State 68

   56 fundecList: afundec fundecList .

    $default  reduce using rule 56 (fundecList)


State 69

   61 nametylist: namety nametylist .

    $default  reduce using rule 61 (nametylist)


State 70

    2 exp: exp . PLUS exp
    2    | exp PLUS exp .
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 2 (exp)


State 71

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    3    | exp MINUS exp .
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 3 (exp)


State 72

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    4    | exp TIMES exp .
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    $default  reduce using rule 4 (exp)


State 73

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    5    | exp DIVIDE exp .
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    $default  reduce using rule 5 (exp)


State 74

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    6    | exp EQ exp .
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 6 (exp)


State 75

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    7    | exp NEQ exp .
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 7 (exp)


State 76

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    8    | exp LT exp .
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 8 (exp)


State 77

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
    9    | exp LE exp .
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 9 (exp)


State 78

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   10    | exp GT exp .
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 10 (exp)


State 79

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   11    | exp GE exp .
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 11 (exp)


State 80

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   12    | exp AND exp .
   13    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46

    $default  reduce using rule 12 (exp)


State 81

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   13    | exp OR exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47

    $default  reduce using rule 13 (exp)


State 82

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   43 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 102
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


State 83

   42 lvalue: lvalue DOT ID .

    $default  reduce using rule 42 (lvalue)


State 84

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   15    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 15 (exp)]
    MINUS     [reduce using rule 15 (exp)]
    TIMES     [reduce using rule 15 (exp)]
    DIVIDE    [reduce using rule 15 (exp)]
    EQ        [reduce using rule 15 (exp)]
    NEQ       [reduce using rule 15 (exp)]
    LT        [reduce using rule 15 (exp)]
    LE        [reduce using rule 15 (exp)]
    GT        [reduce using rule 15 (exp)]
    GE        [reduce using rule 15 (exp)]
    AND       [reduce using rule 15 (exp)]
    OR        [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


State 85

   39 fvfields_: COMMA . exp fvfields_
   40          | COMMA . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 103
    lvalue  go to state 14


State 86

   36 fvfields: exp fvfields_ .

    $default  reduce using rule 36 (fvfields)


State 87

   20 exp: ID LPAREN fvfields RPAREN .

    $default  reduce using rule 20 (exp)


State 88

   18 exp: ID LBRACK exp RBRACK . OF exp
   44 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 104

    $default  reduce using rule 44 (lvalue)


State 89

   35 vfield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 105
    lvalue  go to state 14


State 90

   19 exp: ID LBRACE vfields RBRACE .

    $default  reduce using rule 19 (exp)


State 91

   33 vfields_: COMMA . vfield vfields_
   34         | COMMA . vfield

    ID  shift, and go to state 55

    vfield  go to state 106


State 92

   30 vfields: vfield vfields_ .

    $default  reduce using rule 30 (vfields)


State 93

   46 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 46 (expseq)


State 94

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   22    | IF exp THEN exp .
   23    | IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 107

    $default  reduce using rule 22 (exp)


State 95

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   24    | WHILE exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 96

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   25    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    TO      shift, and go to state 108


State 97

   58 afundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   59        | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 109

    $default  reduce using rule 69 (tyfields)

    tyfields  go to state 110
    tyfield   go to state 111


State 98

   53 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 112


State 99

   54 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 113
    lvalue  go to state 14


State 100

   63 namety: TYPE ID EQ . ty

    ID      shift, and go to state 114
    LBRACE  shift, and go to state 115
    ARRAY   shift, and go to state 116

    ty  go to state 117


State 101

   17 exp: LET decs IN expseq . END

    END  shift, and go to state 118


State 102

   43 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 43 (lvalue)


State 103

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   39 fvfields_: COMMA exp . fvfields_
   40          | COMMA exp .

    COMMA   shift, and go to state 85
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 40 (fvfields_)

    fvfields_  go to state 119


State 104

   18 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 120
    lvalue  go to state 14


State 105

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   35 vfield: ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 35 (vfield)


State 106

   33 vfields_: COMMA vfield . vfields_
   34         | COMMA vfield .

    COMMA  shift, and go to state 91

    $default  reduce using rule 34 (vfields_)

    vfields_  go to state 121


State 107

   23 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 122
    lvalue  go to state 14


State 108

   25 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 123
    lvalue  go to state 14


State 109

   72 tyfield: ID . COLON ID

    COLON  shift, and go to state 124


State 110

   58 afundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   59        | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 125


State 111

   67 tyfields: tyfield .
   68         | tyfield . COMMA tyfields_

    COMMA  shift, and go to state 126

    $default  reduce using rule 67 (tyfields)


State 112

   53 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 127


State 113

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   54 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 54 (vardec)


State 114

   64 ty: ID .

    $default  reduce using rule 64 (ty)


State 115

   65 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 109

    $default  reduce using rule 69 (tyfields)

    tyfields  go to state 128
    tyfield   go to state 111


State 116

   66 ty: ARRAY . OF ID

    OF  shift, and go to state 129


State 117

   63 namety: TYPE ID EQ ty .

    $default  reduce using rule 63 (namety)


State 118

   17 exp: LET decs IN expseq END .

    $default  reduce using rule 17 (exp)


State 119

   39 fvfields_: COMMA exp fvfields_ .

    $default  reduce using rule 39 (fvfields_)


State 120

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   18    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 18 (exp)]
    MINUS     [reduce using rule 18 (exp)]
    TIMES     [reduce using rule 18 (exp)]
    DIVIDE    [reduce using rule 18 (exp)]
    EQ        [reduce using rule 18 (exp)]
    NEQ       [reduce using rule 18 (exp)]
    LT        [reduce using rule 18 (exp)]
    LE        [reduce using rule 18 (exp)]
    GT        [reduce using rule 18 (exp)]
    GE        [reduce using rule 18 (exp)]
    AND       [reduce using rule 18 (exp)]
    OR        [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


State 121

   33 vfields_: COMMA vfield vfields_ .

    $default  reduce using rule 33 (vfields_)


State 122

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   23    | IF exp THEN exp ELSE exp .

    $default  reduce using rule 23 (exp)


State 123

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   25    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 130


State 124

   72 tyfield: ID COLON . ID

    ID  shift, and go to state 131


State 125

   58 afundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   59        | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 132
    EQ     shift, and go to state 133


State 126

   68 tyfields: tyfield COMMA . tyfields_

    ID  shift, and go to state 109

    tyfields_  go to state 134
    tyfield    go to state 135


State 127

   53 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 136
    lvalue  go to state 14


State 128

   65 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


State 129

   66 ty: ARRAY OF . ID

    ID  shift, and go to state 138


State 130

   25 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 139
    lvalue  go to state 14


State 131

   72 tyfield: ID COLON ID .

    $default  reduce using rule 72 (tyfield)


State 132

   59 afundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 140


State 133

   58 afundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 141
    lvalue  go to state 14


State 134

   68 tyfields: tyfield COMMA tyfields_ .

    $default  reduce using rule 68 (tyfields)


State 135

   70 tyfields_: tyfield .
   71          | tyfield . COMMA tyfields_

    COMMA  shift, and go to state 142

    $default  reduce using rule 70 (tyfields_)


State 136

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   53 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 53 (vardec)


State 137

   65 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 65 (ty)


State 138

   66 ty: ARRAY OF ID .

    $default  reduce using rule 66 (ty)


State 139

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   25    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 140

   59 afundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 143


State 141

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   58 afundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 58 (afundec)


State 142

   71 tyfields_: tyfield COMMA . tyfields_

    ID  shift, and go to state 109

    tyfields_  go to state 144
    tyfield    go to state 135


State 143

   59 afundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 145
    lvalue  go to state 14


State 144

   71 tyfields_: tyfield COMMA tyfields_ .

    $default  reduce using rule 71 (tyfields_)


State 145

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   59 afundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 59 (afundec)
