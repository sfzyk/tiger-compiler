State 1 conflicts: 1 shift/reduce
State 77 conflicts: 12 shift/reduce
State 86 conflicts: 12 shift/reduce
State 109 conflicts: 12 shift/reduce
State 128 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: exp PLUS exp
    3    | exp MINUS exp
    4    | exp TIMES exp
    5    | exp DIVIDE exp
    6    | exp EQ exp
    7    | exp NEQ exp
    8    | exp LT exp
    9    | exp LE exp
   10    | exp GT exp
   11    | exp GE exp
   12    | exp AND exp
   13    | exp OR exp
   14    | MINUS exp
   15    | lvalue ASSIGN exp
   16    | LPAREN expseq RPAREN
   17    | LET decs IN expseq END
   18    | ID LBRACK exp RBRACK OF exp
   19    | ID LBRACE vfields RBRACE
   20    | ID LPAREN fvfields RPAREN
   21    | lvalue
   22    | IF exp THEN exp
   23    | IF exp THEN exp ELSE exp
   24    | WHILE exp DO exp
   25    | FOR ID ASSIGN exp TO exp DO exp
   26    | BREAK
   27    | INT
   28    | STRING
   29    | NIL

   30 vfields: ID EQ exp vfield_ex
   31        | %empty

   32 vfield_ex: COMMA ID EQ exp vfield_ex
   33          | %empty

   34 fvfields: exp fvfield_ex
   35         | %empty

   36 fvfield_ex: COMMA exp fvfield_ex
   37           | %empty

   38 lvalue: ID
   39       | lvalue DOT ID
   40       | lvalue LBRACK exp RBRACK
   41       | ID LBRACK exp RBRACK

   42 expseq: exp
   43       | exp SEMICOLON expseq
   44       | %empty

   45 decs: dec
   46     | dec decs

   47 dec: vardec
   48    | fundec
   49    | tydec

   50 vardec: VAR ID COLON ID ASSIGN exp
   51       | VAR ID ASSIGN exp

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   54 tydec: TYPE ID EQ ty

   55 ty: ID
   56   | LBRACE tyfields RBRACE
   57   | ARRAY OF ID

   58 tyfields: %empty
   59         | ID COLON ID tyfield_ex

   60 tyfield_ex: COMMA ID COLON ID tyfield_ex
   61           | %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 18 19 20 25 30 32 38 39 41 50 51 52 53 54 55 57 59 60
STRING (259) 28
INT (260) 27
COMMA (261) 32 36 60
COLON (262) 50 53 59 60
SEMICOLON (263) 43
LPAREN (264) 16 20 52 53
RPAREN (265) 16 20 52 53
LBRACK (266) 18 40 41
RBRACK (267) 18 40 41
LBRACE (268) 19 56
RBRACE (269) 19 56
DOT (270) 39
PLUS (271) 2
MINUS (272) 3 14
TIMES (273) 4
DIVIDE (274) 5
EQ (275) 6 30 32 52 53 54
NEQ (276) 7
LT (277) 8
LE (278) 9
GT (279) 10
GE (280) 11
AND (281) 12
OR (282) 13
ASSIGN (283) 15 25 50 51
ARRAY (284) 57
IF (285) 22 23
THEN (286) 22 23
ELSE (287) 23
WHILE (288) 24
FOR (289) 25
TO (290) 25
DO (291) 24 25
LET (292) 17
IN (293) 17
END (294) 17
OF (295) 18 57
BREAK (296) 26
NIL (297) 29
FUNCTION (298) 52 53
VAR (299) 50 51
TYPE (300) 54
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29, on right: 1 2 3 4 5 6 7 8 9 10 11 12 13 14
    15 18 22 23 24 25 30 32 34 36 40 41 42 43 50 51 52 53
vfields (50)
    on left: 30 31, on right: 19
vfield_ex (51)
    on left: 32 33, on right: 30 32
fvfields (52)
    on left: 34 35, on right: 20
fvfield_ex (53)
    on left: 36 37, on right: 34 36
lvalue (54)
    on left: 38 39 40 41, on right: 15 21 39 40
expseq (55)
    on left: 42 43 44, on right: 16 17 43
decs (56)
    on left: 45 46, on right: 17 46
dec (57)
    on left: 47 48 49, on right: 45 46
vardec (58)
    on left: 50 51, on right: 47
fundec (59)
    on left: 52 53, on right: 48
tydec (60)
    on left: 54, on right: 49
ty (61)
    on left: 55 56 57, on right: 54
tyfields (62)
    on left: 58 59, on right: 52 53 56
tyfield_ex (63)
    on left: 60 61, on right: 59 60


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


State 1

   18 exp: ID . LBRACK exp RBRACK OF exp
   19    | ID . LBRACE vfields RBRACE
   20    | ID . LPAREN fvfields RPAREN
   38 lvalue: ID .
   41       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 38 (lvalue)]
    $default  reduce using rule 38 (lvalue)


State 2

   28 exp: STRING .

    $default  reduce using rule 28 (exp)


State 3

   27 exp: INT .

    $default  reduce using rule 27 (exp)


State 4

   16 exp: LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 19


State 5

   14 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 20
    lvalue  go to state 14


State 6

   22 exp: IF . exp THEN exp
   23    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


State 7

   24 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


State 8

   25 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 23


State 9

   17 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    decs    go to state 27
    dec     go to state 28
    vardec  go to state 29
    fundec  go to state 30
    tydec   go to state 31


State 10

   26 exp: BREAK .

    $default  reduce using rule 26 (exp)


State 11

   29 exp: NIL .

    $default  reduce using rule 29 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 32


State 13

    1 program: exp .
    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 1 (program)


State 14

   15 exp: lvalue . ASSIGN exp
   21    | lvalue .
   39 lvalue: lvalue . DOT ID
   40       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 45
    DOT     shift, and go to state 46
    ASSIGN  shift, and go to state 47

    $default  reduce using rule 21 (exp)


State 15

   20 exp: ID LPAREN . fvfields RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 35 (fvfields)

    exp       go to state 48
    fvfields  go to state 49
    lvalue    go to state 14


State 16

   18 exp: ID LBRACK . exp RBRACK OF exp
   41 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 50
    lvalue  go to state 14


State 17

   19 exp: ID LBRACE . vfields RBRACE

    ID  shift, and go to state 51

    $default  reduce using rule 31 (vfields)

    vfields  go to state 52


State 18

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   42 expseq: exp .
   43       | exp . SEMICOLON expseq

    SEMICOLON  shift, and go to state 53
    PLUS       shift, and go to state 33
    MINUS      shift, and go to state 34
    TIMES      shift, and go to state 35
    DIVIDE     shift, and go to state 36
    EQ         shift, and go to state 37
    NEQ        shift, and go to state 38
    LT         shift, and go to state 39
    LE         shift, and go to state 40
    GT         shift, and go to state 41
    GE         shift, and go to state 42
    AND        shift, and go to state 43
    OR         shift, and go to state 44

    $default  reduce using rule 42 (expseq)


State 19

   16 exp: LPAREN expseq . RPAREN

    RPAREN  shift, and go to state 54


State 20

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   14    | MINUS exp .

    $default  reduce using rule 14 (exp)


State 21

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   22    | IF exp . THEN exp
   23    | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    THEN    shift, and go to state 55


State 22

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   24    | WHILE exp . DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    DO      shift, and go to state 56


State 23

   25 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 57


State 24

   52 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 58


State 25

   50 vardec: VAR . ID COLON ID ASSIGN exp
   51       | VAR . ID ASSIGN exp

    ID  shift, and go to state 59


State 26

   54 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 60


State 27

   17 exp: LET decs . IN expseq END

    IN  shift, and go to state 61


State 28

   45 decs: dec .
   46     | dec . decs

    FUNCTION  shift, and go to state 24
    VAR       shift, and go to state 25
    TYPE      shift, and go to state 26

    $default  reduce using rule 45 (decs)

    decs    go to state 62
    dec     go to state 28
    vardec  go to state 29
    fundec  go to state 30
    tydec   go to state 31


State 29

   47 dec: vardec .

    $default  reduce using rule 47 (dec)


State 30

   48 dec: fundec .

    $default  reduce using rule 48 (dec)


State 31

   49 dec: tydec .

    $default  reduce using rule 49 (dec)


State 32

    0 $accept: program $end .

    $default  accept


State 33

    2 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 63
    lvalue  go to state 14


State 34

    3 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 64
    lvalue  go to state 14


State 35

    4 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 65
    lvalue  go to state 14


State 36

    5 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 66
    lvalue  go to state 14


State 37

    6 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 67
    lvalue  go to state 14


State 38

    7 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 68
    lvalue  go to state 14


State 39

    8 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 69
    lvalue  go to state 14


State 40

    9 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 70
    lvalue  go to state 14


State 41

   10 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 71
    lvalue  go to state 14


State 42

   11 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 72
    lvalue  go to state 14


State 43

   12 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


State 44

   13 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


State 45

   40 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


State 46

   39 lvalue: lvalue DOT . ID

    ID  shift, and go to state 76


State 47

   15 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


State 48

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   34 fvfields: exp . fvfield_ex

    COMMA   shift, and go to state 78
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 37 (fvfield_ex)

    fvfield_ex  go to state 79


State 49

   20 exp: ID LPAREN fvfields . RPAREN

    RPAREN  shift, and go to state 80


State 50

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   18    | ID LBRACK exp . RBRACK OF exp
   41 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 81
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44


State 51

   30 vfields: ID . EQ exp vfield_ex

    EQ  shift, and go to state 82


State 52

   19 exp: ID LBRACE vfields . RBRACE

    RBRACE  shift, and go to state 83


State 53

   43 expseq: exp SEMICOLON . expseq

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 84


State 54

   16 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 16 (exp)


State 55

   22 exp: IF exp THEN . exp
   23    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    lvalue  go to state 14


State 56

   24 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 86
    lvalue  go to state 14


State 57

   25 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14


State 58

   52 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   53       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 88


State 59

   50 vardec: VAR ID . COLON ID ASSIGN exp
   51       | VAR ID . ASSIGN exp

    COLON   shift, and go to state 89
    ASSIGN  shift, and go to state 90


State 60

   54 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 91


State 61

   17 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (expseq)

    exp     go to state 18
    lvalue  go to state 14
    expseq  go to state 92


State 62

   46 decs: dec decs .

    $default  reduce using rule 46 (decs)


State 63

    2 exp: exp . PLUS exp
    2    | exp PLUS exp .
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 2 (exp)


State 64

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    3    | exp MINUS exp .
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    $default  reduce using rule 3 (exp)


State 65

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    4    | exp TIMES exp .
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    $default  reduce using rule 4 (exp)


State 66

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    5    | exp DIVIDE exp .
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    $default  reduce using rule 5 (exp)


State 67

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    6    | exp EQ exp .
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 6 (exp)


State 68

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    7    | exp NEQ exp .
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 7 (exp)


State 69

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    8    | exp LT exp .
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 8 (exp)


State 70

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
    9    | exp LE exp .
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 9 (exp)


State 71

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   10    | exp GT exp .
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 10 (exp)


State 72

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   11    | exp GE exp .
   12    | exp . AND exp
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 11 (exp)


State 73

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   12    | exp AND exp .
   13    | exp . OR exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42

    $default  reduce using rule 12 (exp)


State 74

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   13    | exp OR exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43

    $default  reduce using rule 13 (exp)


State 75

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   40 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 93
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44


State 76

   39 lvalue: lvalue DOT ID .

    $default  reduce using rule 39 (lvalue)


State 77

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   15    | lvalue ASSIGN exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 15 (exp)]
    MINUS     [reduce using rule 15 (exp)]
    TIMES     [reduce using rule 15 (exp)]
    DIVIDE    [reduce using rule 15 (exp)]
    EQ        [reduce using rule 15 (exp)]
    NEQ       [reduce using rule 15 (exp)]
    LT        [reduce using rule 15 (exp)]
    LE        [reduce using rule 15 (exp)]
    GT        [reduce using rule 15 (exp)]
    GE        [reduce using rule 15 (exp)]
    AND       [reduce using rule 15 (exp)]
    OR        [reduce using rule 15 (exp)]
    $default  reduce using rule 15 (exp)


State 78

   36 fvfield_ex: COMMA . exp fvfield_ex

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 94
    lvalue  go to state 14


State 79

   34 fvfields: exp fvfield_ex .

    $default  reduce using rule 34 (fvfields)


State 80

   20 exp: ID LPAREN fvfields RPAREN .

    $default  reduce using rule 20 (exp)


State 81

   18 exp: ID LBRACK exp RBRACK . OF exp
   41 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 95

    $default  reduce using rule 41 (lvalue)


State 82

   30 vfields: ID EQ . exp vfield_ex

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 96
    lvalue  go to state 14


State 83

   19 exp: ID LBRACE vfields RBRACE .

    $default  reduce using rule 19 (exp)


State 84

   43 expseq: exp SEMICOLON expseq .

    $default  reduce using rule 43 (expseq)


State 85

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   22    | IF exp THEN exp .
   23    | IF exp THEN exp . ELSE exp

    ELSE  shift, and go to state 97

    $default  reduce using rule 22 (exp)


State 86

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   24    | WHILE exp DO exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 87

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   25    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    TO      shift, and go to state 98


State 88

   52 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   53       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 99

    $default  reduce using rule 58 (tyfields)

    tyfields  go to state 100


State 89

   50 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 101


State 90

   51 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 102
    lvalue  go to state 14


State 91

   54 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 103
    LBRACE  shift, and go to state 104
    ARRAY   shift, and go to state 105

    ty  go to state 106


State 92

   17 exp: LET decs IN expseq . END

    END  shift, and go to state 107


State 93

   40 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 40 (lvalue)


State 94

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   36 fvfield_ex: COMMA exp . fvfield_ex

    COMMA   shift, and go to state 78
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 37 (fvfield_ex)

    fvfield_ex  go to state 108


State 95

   18 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 109
    lvalue  go to state 14


State 96

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   30 vfields: ID EQ exp . vfield_ex

    COMMA   shift, and go to state 110
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 33 (vfield_ex)

    vfield_ex  go to state 111


State 97

   23 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 112
    lvalue  go to state 14


State 98

   25 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 113
    lvalue  go to state 14


State 99

   59 tyfields: ID . COLON ID tyfield_ex

    COLON  shift, and go to state 114


State 100

   52 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   53       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 115


State 101

   50 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 116


State 102

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   51 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 51 (vardec)


State 103

   55 ty: ID .

    $default  reduce using rule 55 (ty)


State 104

   56 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 99

    $default  reduce using rule 58 (tyfields)

    tyfields  go to state 117


State 105

   57 ty: ARRAY . OF ID

    OF  shift, and go to state 118


State 106

   54 tydec: TYPE ID EQ ty .

    $default  reduce using rule 54 (tydec)


State 107

   17 exp: LET decs IN expseq END .

    $default  reduce using rule 17 (exp)


State 108

   36 fvfield_ex: COMMA exp fvfield_ex .

    $default  reduce using rule 36 (fvfield_ex)


State 109

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   18    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 18 (exp)]
    MINUS     [reduce using rule 18 (exp)]
    TIMES     [reduce using rule 18 (exp)]
    DIVIDE    [reduce using rule 18 (exp)]
    EQ        [reduce using rule 18 (exp)]
    NEQ       [reduce using rule 18 (exp)]
    LT        [reduce using rule 18 (exp)]
    LE        [reduce using rule 18 (exp)]
    GT        [reduce using rule 18 (exp)]
    GE        [reduce using rule 18 (exp)]
    AND       [reduce using rule 18 (exp)]
    OR        [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


State 110

   32 vfield_ex: COMMA . ID EQ exp vfield_ex

    ID  shift, and go to state 119


State 111

   30 vfields: ID EQ exp vfield_ex .

    $default  reduce using rule 30 (vfields)


State 112

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   23    | IF exp THEN exp ELSE exp .

    $default  reduce using rule 23 (exp)


State 113

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   25    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44
    DO      shift, and go to state 120


State 114

   59 tyfields: ID COLON . ID tyfield_ex

    ID  shift, and go to state 121


State 115

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   53       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 122
    EQ     shift, and go to state 123


State 116

   50 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 124
    lvalue  go to state 14


State 117

   56 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 125


State 118

   57 ty: ARRAY OF . ID

    ID  shift, and go to state 126


State 119

   32 vfield_ex: COMMA ID . EQ exp vfield_ex

    EQ  shift, and go to state 127


State 120

   25 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 128
    lvalue  go to state 14


State 121

   59 tyfields: ID COLON ID . tyfield_ex

    COMMA  shift, and go to state 129

    $default  reduce using rule 61 (tyfield_ex)

    tyfield_ex  go to state 130


State 122

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 131


State 123

   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 132
    lvalue  go to state 14


State 124

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   50 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 50 (vardec)


State 125

   56 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 56 (ty)


State 126

   57 ty: ARRAY OF ID .

    $default  reduce using rule 57 (ty)


State 127

   32 vfield_ex: COMMA ID EQ . exp vfield_ex

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 133
    lvalue  go to state 14


State 128

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   25    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 129

   60 tyfield_ex: COMMA . ID COLON ID tyfield_ex

    ID  shift, and go to state 134


State 130

   59 tyfields: ID COLON ID tyfield_ex .

    $default  reduce using rule 59 (tyfields)


State 131

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 135


State 132

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   52 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 52 (fundec)


State 133

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   32 vfield_ex: COMMA ID EQ exp . vfield_ex

    COMMA   shift, and go to state 110
    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 33 (vfield_ex)

    vfield_ex  go to state 136


State 134

   60 tyfield_ex: COMMA ID . COLON ID tyfield_ex

    COLON  shift, and go to state 137


State 135

   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 138
    lvalue  go to state 14


State 136

   32 vfield_ex: COMMA ID EQ exp vfield_ex .

    $default  reduce using rule 32 (vfield_ex)


State 137

   60 tyfield_ex: COMMA ID COLON . ID tyfield_ex

    ID  shift, and go to state 139


State 138

    2 exp: exp . PLUS exp
    3    | exp . MINUS exp
    4    | exp . TIMES exp
    5    | exp . DIVIDE exp
    6    | exp . EQ exp
    7    | exp . NEQ exp
    8    | exp . LT exp
    9    | exp . LE exp
   10    | exp . GT exp
   11    | exp . GE exp
   12    | exp . AND exp
   13    | exp . OR exp
   53 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 33
    MINUS   shift, and go to state 34
    TIMES   shift, and go to state 35
    DIVIDE  shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    AND     shift, and go to state 43
    OR      shift, and go to state 44

    $default  reduce using rule 53 (fundec)


State 139

   60 tyfield_ex: COMMA ID COLON ID . tyfield_ex

    COMMA  shift, and go to state 129

    $default  reduce using rule 61 (tyfield_ex)

    tyfield_ex  go to state 140


State 140

   60 tyfield_ex: COMMA ID COLON ID tyfield_ex .

    $default  reduce using rule 60 (tyfield_ex)
